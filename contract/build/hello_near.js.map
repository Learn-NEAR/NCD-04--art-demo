{"version":3,"file":"hello_near.js","sources":["../node_modules/near-sdk-js/lib/near-bindgen.js","../node_modules/near-sdk-js/lib/api.js","../node_modules/near-sdk-js/lib/near-contract.js","../node_modules/near-sdk-js/lib/utils.js","../node_modules/near-sdk-js/lib/collections/vector.js","../node_modules/near-sdk-js/lib/collections/unordered-map.js","../node_modules/near-sdk-js/lib/collections/unordered-set.js","../src/generate.ts","../src/models.ts","../src/contract.ts"],"sourcesContent":["export function call(target, key, descriptor) {\n}\nexport function view(target, key, descriptor) {\n}\nexport function NearBindgen(target) {\n    return class extends target {\n        static _init() {\n            // @ts-ignore\n            let args = target.deserializeArgs();\n            let ret = new target(args);\n            // @ts-ignore\n            ret.init();\n            // @ts-ignore\n            ret.serialize();\n            return ret;\n        }\n        static _get() {\n            let ret = Object.create(target.prototype);\n            return ret;\n        }\n    };\n}\n","const U64_MAX = 2n ** 64n - 1n;\nconst EVICTED_REGISTER = U64_MAX - 1n;\nexport function log(...params) {\n    env.log(`${params\n        .map(x => x === undefined ? 'undefined' : x) // Stringify undefined\n        .map(x => typeof (x) === 'object' ? JSON.stringify(x) : x) // Convert Objects to strings\n        .join(' ')}` // Convert to string\n    );\n}\nexport function signerAccountId() {\n    env.signer_account_id(0);\n    return env.read_register(0);\n}\nexport function signerAccountPk() {\n    env.signer_account_pk(0);\n    return env.read_register(0);\n}\nexport function predecessorAccountId() {\n    env.predecessor_account_id(0);\n    return env.read_register(0);\n}\nexport function blockIndex() {\n    return env.block_index();\n}\nexport function blockHeight() {\n    return blockIndex();\n}\nexport function blockTimestamp() {\n    return env.block_timestamp();\n}\nexport function epochHeight() {\n    return env.epoch_height();\n}\nexport function attachedDeposit() {\n    return env.attached_deposit();\n}\nexport function prepaidGas() {\n    return env.prepaid_gas();\n}\nexport function usedGas() {\n    return env.used_gas();\n}\nexport function randomSeed() {\n    env.random_seed(0);\n    return env.read_register(0);\n}\nexport function sha256(value) {\n    env.sha256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak256(value) {\n    env.keccak256(value, 0);\n    return env.read_register(0);\n}\nexport function keccak512(value) {\n    env.keccak512(value, 0);\n    return env.read_register(0);\n}\nexport function ripemd160(value) {\n    env.ripemd160(value, 0);\n    return env.read_register(0);\n}\nexport function ecrecover(hash, sig, v, malleabilityFlag) {\n    let ret = env.ecrecover(hash, sig, v, malleabilityFlag, 0);\n    if (ret === 0n) {\n        return null;\n    }\n    return env.read_register(0);\n}\nexport function panic(msg) {\n    if (msg !== undefined) {\n        env.panic(msg);\n    }\n    else {\n        env.panic();\n    }\n}\nexport function panicUtf8(msg) {\n    env.panic_utf8(msg);\n}\nexport function logUtf8(msg) {\n    env.log_utf8(msg);\n}\nexport function logUtf16(msg) {\n    env.log_utf16(msg);\n}\nexport function storageRead(key) {\n    let ret = env.storage_read(key, 0);\n    if (ret === 1n) {\n        return env.read_register(0);\n    }\n    else {\n        return null;\n    }\n}\nexport function storageHasKey(key) {\n    let ret = env.storage_has_key(key);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function validatorStake(accountId) {\n    return env.validator_stake(accountId);\n}\nexport function validatorTotalStake() {\n    return env.validator_total_stake();\n}\nexport function altBn128G1Multiexp(value) {\n    env.alt_bn128_g1_multiexp(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128G1Sum(value) {\n    env.alt_bn128_g1_sum(value, 0);\n    return env.read_register(0);\n}\nexport function altBn128PairingCheck(value) {\n    let ret = env.alt_bn128_pairing_check(value);\n    if (ret === 1n) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\nexport function jsvmAccountId() {\n    env.jsvm_account_id(0);\n    return env.read_register(0);\n}\nexport function jsvmJsContractName() {\n    env.jsvm_js_contract_name(0);\n    return env.read_register(0);\n}\nexport function jsvmMethodName() {\n    env.jsvm_method_name(0);\n    return env.read_register(0);\n}\nexport function jsvmArgs() {\n    env.jsvm_args(0);\n    return env.read_register(0);\n}\nexport function jsvmStorageWrite(key, value) {\n    let exist = env.jsvm_storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageRead(key) {\n    let exist = env.jsvm_storage_read(key, 0);\n    if (exist === 1n) {\n        return env.read_register(0);\n    }\n    return null;\n}\nexport function jsvmStorageRemove(key) {\n    let exist = env.jsvm_storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmStorageHasKey(key) {\n    let exist = env.jsvm_storage_has_key(key);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function jsvmCallRaw(contractName, method, args) {\n    env.jsvm_call(contractName, method, JSON.stringify(args), 0);\n    return env.read_register(0);\n}\nexport function jsvmCall(contractName, method, args) {\n    let ret = jsvmCallRaw(contractName, method, args);\n    if (ret === null) {\n        return ret;\n    }\n    return JSON.parse(ret);\n}\nexport function storageGetEvicted() {\n    return env.read_register(EVICTED_REGISTER);\n}\nexport function jsvmValueReturn(value) {\n    env.jsvm_value_return(value);\n}\n// Standalone only APIs\nexport function currentAccountId() {\n    env.current_account_id(0);\n    return env.read_register(0);\n}\nexport function input() {\n    env.input(0);\n    return env.read_register(0);\n}\nexport function storageUsage() {\n    return env.storage_usage();\n}\nexport function accountBalance() {\n    return env.account_balance();\n}\nexport function accountLockedBalance() {\n    return env.account_locked_balance();\n}\nexport function valueReturn(value) {\n    env.value_return(value);\n}\nexport function promiseCreate(accountId, methodName, args, amount, gas) {\n    return env.promise_create(accountId, methodName, args, amount, gas);\n}\nexport function promiseThen(promiseIndex, accountId, methodName, args, amount, gas) {\n    return env.promise_then(promiseIndex, accountId, methodName, args, amount, gas);\n}\nexport function promiseAnd(...promiseIndex) {\n    return env.promise_and(...promiseIndex);\n}\nexport function promiseBatchCreate(accountId) {\n    return env.promise_batch_create(accountId);\n}\nexport function promiseBatchThen(promiseIndex, accountId) {\n    return env.promise_batch_then(promiseIndex, accountId);\n}\nexport function promiseBatchActionCreateAccount(promiseIndex) {\n    env.promise_batch_action_create_account(promiseIndex);\n}\nexport function promiseBatchActionDeployContract(promiseIndex, code) {\n    env.promise_batch_action_deploy_contract(promiseIndex, code);\n}\nexport function promiseBatchActionFunctionCall(promiseIndex, methodName, args, amount, gas) {\n    env.promise_batch_action_function_call(promiseIndex, methodName, args, amount, gas);\n}\nexport function promiseBatchActionTransfer(promiseIndex, amount) {\n    env.promise_batch_action_transfer(promiseIndex, amount);\n}\nexport function promiseBatchActionStake(promiseIndex, amount, publicKey) {\n    env.promise_batch_action_stake(promiseIndex, amount, publicKey);\n}\nexport function promiseBatchActionAddKeyWithFullAccess(promiseIndex, publicKey, nonce) {\n    env.promise_batch_action_add_key_with_full_access(promiseIndex, publicKey, nonce);\n}\nexport function promiseBatchActionAddKeyWithFunctionCall(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames) {\n    env.promise_batch_action_add_key_with_function_call(promiseIndex, publicKey, nonce, allowance, receiverId, methodNames);\n}\nexport function promiseBatchActionDeleteKey(promiseIndex, publicKey) {\n    env.promise_batch_action_delete_key(promiseIndex, publicKey);\n}\nexport function promiseBatchActionDeleteAccount(promiseIndex, beneficiaryId) {\n    env.promise_batch_action_delete_account(promiseIndex, beneficiaryId);\n}\nexport function promiseResultsCount() {\n    return env.promise_results_count();\n}\nexport var PromiseResult;\n(function (PromiseResult) {\n    PromiseResult[PromiseResult[\"NotReady\"] = 0] = \"NotReady\";\n    PromiseResult[PromiseResult[\"Successful\"] = 1] = \"Successful\";\n    PromiseResult[PromiseResult[\"Failed\"] = 2] = \"Failed\";\n})(PromiseResult || (PromiseResult = {}));\nexport function promiseResult(resultIdx) {\n    let status = env.promise_result(resultIdx, 0);\n    if (status == PromiseResult.Successful) {\n        return env.read_register(0);\n    }\n    else if (status == PromiseResult.Failed ||\n        status == PromiseResult.NotReady) {\n        return status;\n    }\n    else {\n        panic(`Unexpected return code: ${status}`);\n    }\n}\nexport function promiseReturn(promiseIdx) {\n    env.promise_return(promiseIdx);\n}\nexport function storageWrite(key, value) {\n    let exist = env.storage_write(key, value, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageRemove(key) {\n    let exist = env.storage_remove(key, EVICTED_REGISTER);\n    if (exist === 1n) {\n        return true;\n    }\n    return false;\n}\nexport function storageByteCost() {\n    return 10000000000000000000n;\n}\n","import * as near from \"./api\";\nexport class NearContract {\n    deserialize() {\n        const rawState = near.storageRead(\"STATE\");\n        if (rawState) {\n            const state = JSON.parse(rawState);\n            // reconstruction of the contract class object from plain object\n            let c = this.default();\n            Object.assign(this, state);\n            for (const item in c) {\n                if (c[item].constructor?.deserialize !== undefined) {\n                    this[item] = c[item].constructor.deserialize(this[item]);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Contract state is empty\");\n        }\n    }\n    serialize() {\n        near.storageWrite(\"STATE\", JSON.stringify(this));\n    }\n    static deserializeArgs() {\n        let args = near.input();\n        return JSON.parse(args || \"{}\");\n    }\n    static serializeReturn(ret) {\n        return JSON.stringify(ret);\n    }\n    init() { }\n}\n","export function u8ArrayToBytes(array) {\n    let ret = \"\";\n    for (let e of array) {\n        ret += String.fromCharCode(e);\n    }\n    return ret;\n}\n// TODO this function is a bit broken and the type can't be string\n// TODO for more info: https://github.com/near/near-sdk-js/issues/78\nexport function bytesToU8Array(bytes) {\n    let ret = new Uint8Array(bytes.length);\n    for (let i = 0; i < bytes.length; i++) {\n        ret[i] = bytes.charCodeAt(i);\n    }\n    return ret;\n}\nexport function bytes(strOrU8Array) {\n    if (typeof strOrU8Array == \"string\") {\n        return checkStringIsBytes(strOrU8Array);\n    }\n    else if (strOrU8Array instanceof Uint8Array) {\n        return u8ArrayToBytes(strOrU8Array);\n    }\n    throw new Error(\"bytes: expected string or Uint8Array\");\n}\nfunction checkStringIsBytes(str) {\n    for (let i = 0; i < str.length; i++) {\n        if (str.charCodeAt(i) > 255) {\n            throw new Error(`string ${str} at index ${i}: ${str[i]} is not a valid byte`);\n        }\n    }\n    return str;\n}\nexport function assert(b, str) {\n    if (b) {\n        return;\n    }\n    else {\n        throw Error(\"assertion failed: \" + str);\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes } from \"../utils\";\nconst ERR_INDEX_OUT_OF_BOUNDS = \"Index out of bounds\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nfunction indexToKey(prefix, index) {\n    let data = new Uint32Array([index]);\n    let array = new Uint8Array(data.buffer);\n    let key = u8ArrayToBytes(array);\n    return prefix + key;\n}\n/// An iterable implementation of vector that stores its content on the trie.\n/// Uses the following map: index -> element\nexport class Vector {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n    }\n    len() {\n        return this.length;\n    }\n    isEmpty() {\n        return this.length == 0;\n    }\n    get(index) {\n        if (index >= this.length) {\n            return null;\n        }\n        let storageKey = indexToKey(this.prefix, index);\n        return JSON.parse(near.storageRead(storageKey));\n    }\n    /// Removes an element from the vector and returns it in serialized form.\n    /// The removed element is replaced by the last element of the vector.\n    /// Does not preserve ordering, but is `O(1)`.\n    swapRemove(index) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else if (index + 1 == this.length) {\n            return this.pop();\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            let last = this.pop();\n            if (near.storageWrite(key, JSON.stringify(last))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    push(element) {\n        let key = indexToKey(this.prefix, this.length);\n        this.length += 1;\n        near.storageWrite(key, JSON.stringify(element));\n    }\n    pop() {\n        if (this.isEmpty()) {\n            return null;\n        }\n        else {\n            let lastIndex = this.length - 1;\n            let lastKey = indexToKey(this.prefix, lastIndex);\n            this.length -= 1;\n            if (near.storageRemove(lastKey)) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    replace(index, element) {\n        if (index >= this.length) {\n            throw new Error(ERR_INDEX_OUT_OF_BOUNDS);\n        }\n        else {\n            let key = indexToKey(this.prefix, index);\n            if (near.storageWrite(key, JSON.stringify(element))) {\n                return JSON.parse(near.storageGetEvicted());\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.push(element);\n        }\n    }\n    [Symbol.iterator]() {\n        return new VectorIterator(this);\n    }\n    clear() {\n        for (let i = 0; i < this.length; i++) {\n            let key = indexToKey(this.prefix, i);\n            near.storageRemove(key);\n        }\n        this.length = 0;\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let vector = new Vector(data.prefix);\n        vector.length = data.length;\n        return vector;\n    }\n}\nexport class VectorIterator {\n    constructor(vector) {\n        this.current = 0;\n        this.vector = vector;\n    }\n    next() {\n        if (this.current < this.vector.len()) {\n            let value = this.vector.get(this.current);\n            this.current += 1;\n            return { value, done: false };\n        }\n        return { value: null, done: true };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector, VectorIterator } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedMap {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.keyIndexPrefix = prefix + \"i\";\n        let indexKey = prefix + \"k\";\n        let indexValue = prefix + \"v\";\n        this.keys = new Vector(indexKey);\n        this.values = new Vector(indexValue);\n    }\n    len() {\n        let keysLen = this.keys.len();\n        let valuesLen = this.values.len();\n        if (keysLen != valuesLen) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysLen;\n    }\n    isEmpty() {\n        let keysIsEmpty = this.keys.isEmpty();\n        let valuesIsEmpty = this.values.isEmpty();\n        if (keysIsEmpty != valuesIsEmpty) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return keysIsEmpty;\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    getIndexRaw(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        return indexRaw;\n    }\n    get(key) {\n        let indexRaw = this.getIndexRaw(key);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            let value = this.values.get(index);\n            if (value) {\n                return value;\n            }\n            else {\n                throw new Error(ERR_INCONSISTENT_STATE);\n            }\n        }\n        return null;\n    }\n    set(key, value) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            let index = this.deserializeIndex(indexRaw);\n            return this.values.replace(index, value);\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.keys.push(key);\n            this.values.push(value);\n            return null;\n        }\n    }\n    remove(key) {\n        let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastKey = this.keys.get(this.len() - 1);\n                if (!lastKey) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastKey != key) {\n                    let lastLookupKey = this.keyIndexPrefix + JSON.stringify(lastKey);\n                    near.storageWrite(lastLookupKey, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.keys.swapRemove(index);\n            return this.values.swapRemove(index);\n        }\n        return null;\n    }\n    clear() {\n        for (let key of this.keys) {\n            let indexLookup = this.keyIndexPrefix + JSON.stringify(key);\n            near.storageRemove(indexLookup);\n        }\n        this.keys.clear();\n        this.values.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return new UnorderedMapIterator(this);\n    }\n    extend(kvs) {\n        for (let [k, v] of kvs) {\n            this.set(k, v);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let map = new UnorderedMap(data.prefix);\n        // reconstruct UnorderedMap\n        map.length = data.length;\n        // reconstruct keys Vector\n        map.keys = new Vector(data.prefix + \"k\");\n        map.keys.length = data.keys.length;\n        // reconstruct values Vector\n        map.values = new Vector(data.prefix + \"v\");\n        map.values.length = data.values.length;\n        return map;\n    }\n}\nclass UnorderedMapIterator {\n    constructor(unorderedMap) {\n        this.keys = new VectorIterator(unorderedMap.keys);\n        this.values = new VectorIterator(unorderedMap.values);\n    }\n    next() {\n        let key = this.keys.next();\n        let value = this.values.next();\n        if (key.done != value.done) {\n            throw new Error(ERR_INCONSISTENT_STATE);\n        }\n        return { value: [key.value, value.value], done: key.done };\n    }\n}\n","import * as near from \"../api\";\nimport { u8ArrayToBytes, bytesToU8Array } from \"../utils\";\nimport { Vector } from \"./vector\";\nconst ERR_INCONSISTENT_STATE = \"The collection is an inconsistent state. Did previous smart contract execution terminate unexpectedly?\";\nexport class UnorderedSet {\n    constructor(prefix) {\n        this.length = 0;\n        this.prefix = prefix;\n        this.elementIndexPrefix = prefix + \"i\";\n        let elementsPrefix = prefix + \"e\";\n        this.elements = new Vector(elementsPrefix);\n    }\n    len() {\n        return this.elements.len();\n    }\n    isEmpty() {\n        return this.elements.isEmpty();\n    }\n    serializeIndex(index) {\n        let data = new Uint32Array([index]);\n        let array = new Uint8Array(data.buffer);\n        return u8ArrayToBytes(array);\n    }\n    deserializeIndex(rawIndex) {\n        let array = bytesToU8Array(rawIndex);\n        let data = new Uint32Array(array.buffer);\n        return data[0];\n    }\n    contains(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        return near.storageHasKey(indexLookup);\n    }\n    set(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        if (near.storageRead(indexLookup)) {\n            return false;\n        }\n        else {\n            let nextIndex = this.len();\n            let nextIndexRaw = this.serializeIndex(nextIndex);\n            near.storageWrite(indexLookup, nextIndexRaw);\n            this.elements.push(element);\n            return true;\n        }\n    }\n    remove(element) {\n        let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n        let indexRaw = near.storageRead(indexLookup);\n        if (indexRaw) {\n            if (this.len() == 1) {\n                // If there is only one element then swap remove simply removes it without\n                // swapping with the last element.\n                near.storageRemove(indexLookup);\n            }\n            else {\n                // If there is more than one element then swap remove swaps it with the last\n                // element.\n                let lastElement = this.elements.get(this.len() - 1);\n                if (!lastElement) {\n                    throw new Error(ERR_INCONSISTENT_STATE);\n                }\n                near.storageRemove(indexLookup);\n                // If the removed element was the last element from keys, then we don't need to\n                // reinsert the lookup back.\n                if (lastElement != element) {\n                    let lastLookupElement = this.elementIndexPrefix + JSON.stringify(lastElement);\n                    near.storageWrite(lastLookupElement, indexRaw);\n                }\n            }\n            let index = this.deserializeIndex(indexRaw);\n            this.elements.swapRemove(index);\n            return true;\n        }\n        return false;\n    }\n    clear() {\n        for (let element of this.elements) {\n            let indexLookup = this.elementIndexPrefix + JSON.stringify(element);\n            near.storageRemove(indexLookup);\n        }\n        this.elements.clear();\n    }\n    toArray() {\n        let ret = [];\n        for (let v of this) {\n            ret.push(v);\n        }\n        return ret;\n    }\n    [Symbol.iterator]() {\n        return this.elements[Symbol.iterator]();\n    }\n    extend(elements) {\n        for (let element of elements) {\n            this.set(element);\n        }\n    }\n    serialize() {\n        return JSON.stringify(this);\n    }\n    // converting plain object to class object\n    static deserialize(data) {\n        let set = new UnorderedSet(data.prefix);\n        // reconstruct UnorderedSet\n        set.length = data.length;\n        // reconstruct Vector\n        let elementsPrefix = data.prefix + \"e\";\n        set.elements = new Vector(elementsPrefix);\n        set.elements.length = data.elements.length;\n        return set;\n    }\n}\n","import { near } from \"near-sdk-js\";\n\nconst SIZE = 22;\nconst HALF_SIZE = SIZE / 2;\n\nconst schema = [\"🟣\", \"🟡️️\", \"⚫️\", \"⭕️\", \"🔘\"];\n\nexport function generate(seed: number): string {\n  let output = \"\";\n\n  const a = seed == 0 ? Number(randomNum()) : seed;\n\n  if (seed === 0) {\n    near.log(\n      `\\n\\n\\tCall claimMyDesign with the seed number ${a} to claim it.\\n`\n    );\n  }\n\n  const mod = (a % 11) + 5;\n\n  for (let i = 0; i < SIZE; i++) {\n    let y = 2 * (i - HALF_SIZE) + 1;\n\n    if (a % 3 === 1) {\n      y *= -1;\n    } else if (a % 3 === 2) {\n      y = abs(y);\n    }\n\n    y *= a;\n\n    for (let j = 0; j < SIZE; j++) {\n      let x = 2 * (j - HALF_SIZE) + 1;\n\n      if (a % 2 === 1) {\n        x = abs(x);\n      }\n\n      x *= a;\n\n      const v = abs(x * y) % mod;\n\n      const value = v < 5 ? schema[v] : \"⚪️\";\n\n      output += value;\n    }\n\n    output += \"\\n\";\n  }\n\n  return output;\n}\n\nfunction abs(num: number): number {\n  return num >= 0 ? num : -num;\n}\n\nfunction randomNum(): number {\n  const randomSeed = near.randomSeed();\n\n  let sum = BigInt(0);\n\n  for (let index = 0; index < randomSeed.length; index++) {\n    sum += BigInt(randomSeed.charCodeAt(index));\n  }\n\n  return Number(sum % BigInt(near.blockHeight().toString()));\n}\n","import { NearBindgen, near } from \"near-sdk-js\";\n\n@NearBindgen\nexport class Design {\n  owner: string;\n\n  constructor(public instructions: string) {\n    this.owner = near.signerAccountId();\n  }\n}\n","import {\n  NearBindgen,\n  NearContract,\n  near,\n  call,\n  view,\n  UnorderedMap,\n  UnorderedSet,\n  assert,\n} from \"near-sdk-js\";\nimport { generate } from \"./generate\";\nimport { Design } from \"./models\";\n\n// The @NearBindgen decorator allows this code to compile to Base64.\n@NearBindgen\nexport class Contract extends NearContract {\n  designs: UnorderedMap;\n  owners: UnorderedSet;\n\n  constructor() {\n    //execute the NEAR Contract's constructor\n    super();\n    this.designs = new UnorderedMap(\"designs\");\n    this.owners = new UnorderedSet(\"owners\");\n  }\n\n  default() {\n    return new Contract();\n  }\n\n  // @call indicates that this is a 'change method' or a function\n  // that changes state on the blockchain. Change methods cost gas.\n  // For more info -> https://docs.near.org/docs/concepts/gas\n  @call\n  claimMyDesign(seed: number): void {\n    assert(seed >= 0, \"Seed needs to be valid.\");\n    assert(\n      !this.designs.get(near.signerAccountId()),\n      \"You can only own one design.\"\n    );\n\n    const instructions = generate(seed);\n\n    const design = new Design(instructions);\n\n    near.log(\n      `\\n\\n\\t> ART / Seed: ${seed} \\n\\n\\t ${instructions.replace(\n        /\\n/g,\n        \"\\n\\t\"\n      )}\\n`\n    );\n\n    near.log(\"\\n\\n\\tClaimed Art\");\n\n    this.designs.set(near.signerAccountId(), design);\n    this.owners.set(near.signerAccountId());\n  }\n\n  // @view indicates a 'view method' or a function that returns\n  // the current values stored on the blockchain. View calls are free\n  // and do not cost gas.\n  @view\n  viewMyDesign(): void {\n    let design = this.designs.get(near.signerAccountId()) as Design;\n\n    near.log(\n      `\\n\\n\\t> Your Art \\n\\n\\t${design.instructions.replace(/\\n/g, \"\\n\\t\")}\\n`\n    );\n  }\n\n  @call\n  burnMyDesign(): void {\n    assert(\n      !!this.designs.get(near.signerAccountId()),\n      \"No design to burn here.\"\n    );\n\n    this.designs.remove(near.signerAccountId());\n    this.owners.remove(near.signerAccountId());\n\n    near.log(\"\\n\\n\\t> Design burned \\n\\n\\t\");\n  }\n\n  @view\n  design(seed: number = 0): void {\n    let instructions = generate(seed);\n\n    near.log(`\\n\\n\\t> ART \\n\\n\\t${instructions.replace(/\\n/g, \"\\n\\t\")}\\n`);\n  }\n\n  @view\n  viewDesigns(): void {\n    const owners = this.owners.elements;\n\n    for (const owner of owners.toArray()) {\n      const design = this.designs.get(owner as string) as Design;\n\n      near.log(\n        `\\n\\n\\t> Owner : ${owner} \\n\\n\\t${design.instructions.replace(\n          /\\n/g,\n          \"\\n\\t\"\n        )}\\n`\n      );\n    }\n  }\n}\n"],"names":["call","target","key","descriptor","view","NearBindgen","_init","args","deserializeArgs","ret","init","serialize","_get","Object","create","prototype","U64_MAX","EVICTED_REGISTER","log","params","env","map","x","undefined","JSON","stringify","join","signerAccountId","signer_account_id","read_register","blockIndex","block_index","blockHeight","randomSeed","random_seed","storageRead","storage_read","storageHasKey","storage_has_key","storageGetEvicted","input","PromiseResult","storageWrite","value","exist","storage_write","storageRemove","storage_remove","NearContract","deserialize","rawState","near","state","parse","c","default","assign","item","constructor","Error","serializeReturn","u8ArrayToBytes","array","e","String","fromCharCode","bytesToU8Array","bytes","Uint8Array","length","i","charCodeAt","assert","b","str","ERR_INDEX_OUT_OF_BOUNDS","ERR_INCONSISTENT_STATE","indexToKey","prefix","index","data","Uint32Array","buffer","Vector","len","isEmpty","get","storageKey","swapRemove","pop","last","push","element","lastIndex","lastKey","replace","extend","elements","Symbol","iterator","VectorIterator","clear","toArray","v","vector","current","next","done","UnorderedMap","keyIndexPrefix","indexKey","indexValue","keys","values","keysLen","valuesLen","keysIsEmpty","valuesIsEmpty","serializeIndex","deserializeIndex","rawIndex","getIndexRaw","indexLookup","indexRaw","set","nextIndex","nextIndexRaw","remove","lastLookupKey","UnorderedMapIterator","kvs","k","unorderedMap","UnorderedSet","elementIndexPrefix","elementsPrefix","contains","lastElement","lastLookupElement","SIZE","HALF_SIZE","schema","generate","seed","output","a","Number","randomNum","mod","y","abs","j","num","sum","BigInt","toString","Design","_class","instructions","owner","Contract","designs","owners","claimMyDesign","design","viewMyDesign","burnMyDesign","viewDesigns"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,SAASA,IAAT,CAAcC,MAAd,EAAsBC,GAAtB,EAA2BC,UAA3B,EAAuC,EAC7C;AACM,SAASC,IAAT,CAAcH,MAAd,EAAsBC,GAAtB,EAA2BC,UAA3B,EAAuC,EAC7C;AACM,SAASE,WAAT,CAAqBJ,MAArB,EAA6B;EAChC,OAAO,cAAcA,MAAd,CAAqB;AACZ,IAAA,OAALK,KAAK,GAAG;AACX;AACA,MAAA,IAAIC,IAAI,GAAGN,MAAM,CAACO,eAAP,EAAX,CAAA;MACA,IAAIC,GAAG,GAAG,IAAIR,MAAJ,CAAWM,IAAX,CAAV,CAHW;;MAKXE,GAAG,CAACC,IAAJ,EAAA,CALW;;AAOXD,MAAAA,GAAG,CAACE,SAAJ,EAAA,CAAA;AACA,MAAA,OAAOF,GAAP,CAAA;AACH,KAAA;;AACU,IAAA,OAAJG,IAAI,GAAG;MACV,IAAIH,GAAG,GAAGI,MAAM,CAACC,MAAP,CAAcb,MAAM,CAACc,SAArB,CAAV,CAAA;AACA,MAAA,OAAON,GAAP,CAAA;AACH,KAAA;;GAdL,CAAA;AAgBH;;ACrBD,MAAMO,OAAO,GAAG,EAAM,IAAA,GAAN,GAAY,EAA5B,CAAA;AACA,MAAMC,gBAAgB,GAAGD,OAAO,GAAG,EAAnC,CAAA;AACO,SAASE,GAAT,CAAa,GAAGC,MAAhB,EAAwB;AAC3BC,EAAAA,GAAG,CAACF,GAAJ,CAAS,CAAEC,EAAAA,MAAM,CACZE,GADM,CACFC,CAAC,IAAIA,CAAC,KAAKC,SAAN,GAAkB,WAAlB,GAAgCD,CADnC,CACsC;AADtC,GAEND,GAFM,CAEFC,CAAC,IAAI,OAAQA,CAAR,KAAe,QAAf,GAA0BE,IAAI,CAACC,SAAL,CAAeH,CAAf,CAA1B,GAA8CA,CAFjD,CAEoD;AAFpD,GAGNI,IAHM,CAGD,GAHC,CAGI,EAHf;AAAA,GAAA,CAAA;AAKH,CAAA;AACM,SAASC,eAAT,GAA2B;EAC9BP,GAAG,CAACQ,iBAAJ,CAAsB,CAAtB,CAAA,CAAA;AACA,EAAA,OAAOR,GAAG,CAACS,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AASM,SAASC,UAAT,GAAsB;EACzB,OAAOV,GAAG,CAACW,WAAJ,EAAP,CAAA;AACH,CAAA;AACM,SAASC,WAAT,GAAuB;AAC1B,EAAA,OAAOF,UAAU,EAAjB,CAAA;AACH,CAAA;AAgBM,SAASG,UAAT,GAAsB;EACzBb,GAAG,CAACc,WAAJ,CAAgB,CAAhB,CAAA,CAAA;AACA,EAAA,OAAOd,GAAG,CAACS,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AAyCM,SAASM,WAAT,CAAqBjC,GAArB,EAA0B;EAC7B,IAAIO,GAAG,GAAGW,GAAG,CAACgB,YAAJ,CAAiBlC,GAAjB,EAAsB,CAAtB,CAAV,CAAA;;EACA,IAAIO,GAAG,KAAK,EAAZ,EAAgB;AACZ,IAAA,OAAOW,GAAG,CAACS,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,GAFD,MAGK;AACD,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;AACJ,CAAA;AACM,SAASQ,aAAT,CAAuBnC,GAAvB,EAA4B;AAC/B,EAAA,IAAIO,GAAG,GAAGW,GAAG,CAACkB,eAAJ,CAAoBpC,GAApB,CAAV,CAAA;;EACA,IAAIO,GAAG,KAAK,EAAZ,EAAgB;AACZ,IAAA,OAAO,IAAP,CAAA;AACH,GAFD,MAGK;AACD,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;AACJ,CAAA;AA+EM,SAAS8B,iBAAT,GAA6B;AAChC,EAAA,OAAOnB,GAAG,CAACS,aAAJ,CAAkBZ,gBAAlB,CAAP,CAAA;AACH,CAAA;AASM,SAASuB,KAAT,GAAiB;EACpBpB,GAAG,CAACoB,KAAJ,CAAU,CAAV,CAAA,CAAA;AACA,EAAA,OAAOpB,GAAG,CAACS,aAAJ,CAAkB,CAAlB,CAAP,CAAA;AACH,CAAA;AA0DM,IAAIY,aAAJ,CAAA;;AACP,CAAC,UAAUA,aAAV,EAAyB;EACtBA,aAAa,CAACA,aAAa,CAAC,UAAD,CAAb,GAA4B,CAA7B,CAAb,GAA+C,UAA/C,CAAA;EACAA,aAAa,CAACA,aAAa,CAAC,YAAD,CAAb,GAA8B,CAA/B,CAAb,GAAiD,YAAjD,CAAA;EACAA,aAAa,CAACA,aAAa,CAAC,QAAD,CAAb,GAA0B,CAA3B,CAAb,GAA6C,QAA7C,CAAA;AACH,CAJD,EAIGA,aAAa,KAAKA,aAAa,GAAG,EAArB,CAJhB,CAAA,CAAA;AAqBO,SAASC,YAAT,CAAsBxC,GAAtB,EAA2ByC,KAA3B,EAAkC;EACrC,IAAIC,KAAK,GAAGxB,GAAG,CAACyB,aAAJ,CAAkB3C,GAAlB,EAAuByC,KAAvB,EAA8B1B,gBAA9B,CAAZ,CAAA;;EACA,IAAI2B,KAAK,KAAK,EAAd,EAAkB;AACd,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,KAAP,CAAA;AACH,CAAA;AACM,SAASE,aAAT,CAAuB5C,GAAvB,EAA4B;EAC/B,IAAI0C,KAAK,GAAGxB,GAAG,CAAC2B,cAAJ,CAAmB7C,GAAnB,EAAwBe,gBAAxB,CAAZ,CAAA;;EACA,IAAI2B,KAAK,KAAK,EAAd,EAAkB;AACd,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAO,KAAP,CAAA;AACH;;AChSM,MAAMI,YAAN,CAAmB;AACtBC,EAAAA,WAAW,GAAG;AACV,IAAA,MAAMC,QAAQ,GAAGC,WAAA,CAAiB,OAAjB,CAAjB,CAAA;;AACA,IAAA,IAAID,QAAJ,EAAc;MACV,MAAME,KAAK,GAAG5B,IAAI,CAAC6B,KAAL,CAAWH,QAAX,CAAd,CADU;;AAGV,MAAA,IAAII,CAAC,GAAG,IAAKC,CAAAA,OAAL,EAAR,CAAA;AACA1C,MAAAA,MAAM,CAAC2C,MAAP,CAAc,IAAd,EAAoBJ,KAApB,CAAA,CAAA;;AACA,MAAA,KAAK,MAAMK,IAAX,IAAmBH,CAAnB,EAAsB;QAClB,IAAIA,CAAC,CAACG,IAAD,CAAD,CAAQC,WAAR,EAAqBT,WAArB,KAAqC1B,SAAzC,EAAoD;AAChD,UAAA,IAAA,CAAKkC,IAAL,CAAA,GAAaH,CAAC,CAACG,IAAD,CAAD,CAAQC,WAAR,CAAoBT,WAApB,CAAgC,IAAKQ,CAAAA,IAAL,CAAhC,CAAb,CAAA;AACH,SAAA;AACJ,OAAA;AACJ,KAVD,MAWK;AACD,MAAA,MAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN,CAAA;AACH,KAAA;AACJ,GAAA;;AACDhD,EAAAA,SAAS,GAAG;IACRwC,YAAA,CAAkB,OAAlB,EAA2B3B,IAAI,CAACC,SAAL,CAAe,IAAf,CAA3B,CAAA,CAAA;AACH,GAAA;;AACqB,EAAA,OAAfjB,eAAe,GAAG;AACrB,IAAA,IAAID,IAAI,GAAG4C,KAAA,EAAX,CAAA;AACA,IAAA,OAAO3B,IAAI,CAAC6B,KAAL,CAAW9C,IAAI,IAAI,IAAnB,CAAP,CAAA;AACH,GAAA;;EACqB,OAAfqD,eAAe,CAACnD,GAAD,EAAM;AACxB,IAAA,OAAOe,IAAI,CAACC,SAAL,CAAehB,GAAf,CAAP,CAAA;AACH,GAAA;;AACDC,EAAAA,IAAI,GAAG,EAAG;;AA5BY;;ACDnB,SAASmD,cAAT,CAAwBC,KAAxB,EAA+B;EAClC,IAAIrD,GAAG,GAAG,EAAV,CAAA;;AACA,EAAA,KAAK,IAAIsD,CAAT,IAAcD,KAAd,EAAqB;AACjBrD,IAAAA,GAAG,IAAIuD,MAAM,CAACC,YAAP,CAAoBF,CAApB,CAAP,CAAA;AACH,GAAA;;AACD,EAAA,OAAOtD,GAAP,CAAA;AACH;AAED;;AACO,SAASyD,cAAT,CAAwBC,KAAxB,EAA+B;EAClC,IAAI1D,GAAG,GAAG,IAAI2D,UAAJ,CAAeD,KAAK,CAACE,MAArB,CAAV,CAAA;;AACA,EAAA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACE,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;IACnC7D,GAAG,CAAC6D,CAAD,CAAH,GAASH,KAAK,CAACI,UAAN,CAAiBD,CAAjB,CAAT,CAAA;AACH,GAAA;;AACD,EAAA,OAAO7D,GAAP,CAAA;AACH,CAAA;;AAkBM,SAAS+D,MAAT,CAAgBC,CAAhB,EAAmBC,GAAnB,EAAwB;AAC3B,EAAA,IAAID,CAAJ,EAAO;AACH,IAAA,OAAA;AACH,GAFD,MAGK;AACD,IAAA,MAAMd,KAAK,CAAC,oBAAuBe,GAAAA,GAAxB,CAAX,CAAA;AACH,GAAA;AACJ;;ACtCD,MAAMC,uBAAuB,GAAG,qBAAhC,CAAA;AACA,MAAMC,wBAAsB,GAAG,wGAA/B,CAAA;;AACA,SAASC,UAAT,CAAoBC,MAApB,EAA4BC,KAA5B,EAAmC;EAC/B,IAAIC,IAAI,GAAG,IAAIC,WAAJ,CAAgB,CAACF,KAAD,CAAhB,CAAX,CAAA;EACA,IAAIjB,KAAK,GAAG,IAAIM,UAAJ,CAAeY,IAAI,CAACE,MAApB,CAAZ,CAAA;AACA,EAAA,IAAIhF,GAAG,GAAG2D,cAAc,CAACC,KAAD,CAAxB,CAAA;EACA,OAAOgB,MAAM,GAAG5E,GAAhB,CAAA;AACH;AAED;;;AACO,MAAMiF,MAAN,CAAa;EAChBzB,WAAW,CAACoB,MAAD,EAAS;IAChB,IAAKT,CAAAA,MAAL,GAAc,CAAd,CAAA;IACA,IAAKS,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACH,GAAA;;AACDM,EAAAA,GAAG,GAAG;AACF,IAAA,OAAO,KAAKf,MAAZ,CAAA;AACH,GAAA;;AACDgB,EAAAA,OAAO,GAAG;IACN,OAAO,IAAA,CAAKhB,MAAL,IAAe,CAAtB,CAAA;AACH,GAAA;;EACDiB,GAAG,CAACP,KAAD,EAAQ;AACP,IAAA,IAAIA,KAAK,IAAI,IAAKV,CAAAA,MAAlB,EAA0B;AACtB,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;IACD,IAAIkB,UAAU,GAAGV,UAAU,CAAC,KAAKC,MAAN,EAAcC,KAAd,CAA3B,CAAA;IACA,OAAOvD,IAAI,CAAC6B,KAAL,CAAWF,WAAA,CAAiBoC,UAAjB,CAAX,CAAP,CAAA;AACH,GAjBe;AAmBhB;AACA;;;EACAC,UAAU,CAACT,KAAD,EAAQ;AACd,IAAA,IAAIA,KAAK,IAAI,IAAKV,CAAAA,MAAlB,EAA0B;AACtB,MAAA,MAAM,IAAIV,KAAJ,CAAUgB,uBAAV,CAAN,CAAA;KADJ,MAGK,IAAII,KAAK,GAAG,CAAR,IAAa,IAAA,CAAKV,MAAtB,EAA8B;MAC/B,OAAO,IAAA,CAAKoB,GAAL,EAAP,CAAA;AACH,KAFI,MAGA;MACD,IAAIvF,GAAG,GAAG2E,UAAU,CAAC,KAAKC,MAAN,EAAcC,KAAd,CAApB,CAAA;AACA,MAAA,IAAIW,IAAI,GAAG,IAAKD,CAAAA,GAAL,EAAX,CAAA;;AACA,MAAA,IAAItC,YAAA,CAAkBjD,GAAlB,EAAuBsB,IAAI,CAACC,SAAL,CAAeiE,IAAf,CAAvB,CAAJ,EAAkD;QAC9C,OAAOlE,IAAI,CAAC6B,KAAL,CAAWF,iBAAA,EAAX,CAAP,CAAA;AACH,OAFD,MAGK;AACD,QAAA,MAAM,IAAIQ,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAAA;;EACDe,IAAI,CAACC,OAAD,EAAU;IACV,IAAI1F,GAAG,GAAG2E,UAAU,CAAC,KAAKC,MAAN,EAAc,IAAKT,CAAAA,MAAnB,CAApB,CAAA;IACA,IAAKA,CAAAA,MAAL,IAAe,CAAf,CAAA;IACAlB,YAAA,CAAkBjD,GAAlB,EAAuBsB,IAAI,CAACC,SAAL,CAAemE,OAAf,CAAvB,CAAA,CAAA;AACH,GAAA;;AACDH,EAAAA,GAAG,GAAG;IACF,IAAI,IAAA,CAAKJ,OAAL,EAAJ,EAAoB;AAChB,MAAA,OAAO,IAAP,CAAA;AACH,KAFD,MAGK;AACD,MAAA,IAAIQ,SAAS,GAAG,IAAKxB,CAAAA,MAAL,GAAc,CAA9B,CAAA;MACA,IAAIyB,OAAO,GAAGjB,UAAU,CAAC,KAAKC,MAAN,EAAce,SAAd,CAAxB,CAAA;MACA,IAAKxB,CAAAA,MAAL,IAAe,CAAf,CAAA;;AACA,MAAA,IAAIlB,aAAA,CAAmB2C,OAAnB,CAAJ,EAAiC;QAC7B,OAAOtE,IAAI,CAAC6B,KAAL,CAAWF,iBAAA,EAAX,CAAP,CAAA;AACH,OAFD,MAGK;AACD,QAAA,MAAM,IAAIQ,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAAA;;AACDmB,EAAAA,OAAO,CAAChB,KAAD,EAAQa,OAAR,EAAiB;AACpB,IAAA,IAAIb,KAAK,IAAI,IAAKV,CAAAA,MAAlB,EAA0B;AACtB,MAAA,MAAM,IAAIV,KAAJ,CAAUgB,uBAAV,CAAN,CAAA;AACH,KAFD,MAGK;MACD,IAAIzE,GAAG,GAAG2E,UAAU,CAAC,KAAKC,MAAN,EAAcC,KAAd,CAApB,CAAA;;AACA,MAAA,IAAI5B,YAAA,CAAkBjD,GAAlB,EAAuBsB,IAAI,CAACC,SAAL,CAAemE,OAAf,CAAvB,CAAJ,EAAqD;QACjD,OAAOpE,IAAI,CAAC6B,KAAL,CAAWF,iBAAA,EAAX,CAAP,CAAA;AACH,OAFD,MAGK;AACD,QAAA,MAAM,IAAIQ,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,OAAA;AACJ,KAAA;AACJ,GAAA;;EACDoB,MAAM,CAACC,QAAD,EAAW;AACb,IAAA,KAAK,IAAIL,OAAT,IAAoBK,QAApB,EAA8B;MAC1B,IAAKN,CAAAA,IAAL,CAAUC,OAAV,CAAA,CAAA;AACH,KAAA;AACJ,GAAA;;EACe,CAAfM,MAAM,CAACC,QAAQ,CAAI,GAAA;AAChB,IAAA,OAAO,IAAIC,cAAJ,CAAmB,IAAnB,CAAP,CAAA;AACH,GAAA;;AACDC,EAAAA,KAAK,GAAG;AACJ,IAAA,KAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,IAAA,CAAKD,MAAzB,EAAiCC,CAAC,EAAlC,EAAsC;MAClC,IAAIpE,GAAG,GAAG2E,UAAU,CAAC,KAAKC,MAAN,EAAcR,CAAd,CAApB,CAAA;MACAnB,aAAA,CAAmBjD,GAAnB,CAAA,CAAA;AACH,KAAA;;IACD,IAAKmE,CAAAA,MAAL,GAAc,CAAd,CAAA;AACH,GAAA;;AACDiC,EAAAA,OAAO,GAAG;IACN,IAAI7F,GAAG,GAAG,EAAV,CAAA;;AACA,IAAA,KAAK,IAAI8F,CAAT,IAAc,IAAd,EAAoB;MAChB9F,GAAG,CAACkF,IAAJ,CAASY,CAAT,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,OAAO9F,GAAP,CAAA;AACH,GAAA;;AACDE,EAAAA,SAAS,GAAG;AACR,IAAA,OAAOa,IAAI,CAACC,SAAL,CAAe,IAAf,CAAP,CAAA;AACH,GAlGe;;;EAoGE,OAAXwB,WAAW,CAAC+B,IAAD,EAAO;IACrB,IAAIwB,MAAM,GAAG,IAAIrB,MAAJ,CAAWH,IAAI,CAACF,MAAhB,CAAb,CAAA;AACA0B,IAAAA,MAAM,CAACnC,MAAP,GAAgBW,IAAI,CAACX,MAArB,CAAA;AACA,IAAA,OAAOmC,MAAP,CAAA;AACH,GAAA;;AAxGe,CAAA;AA0Gb,MAAMJ,cAAN,CAAqB;EACxB1C,WAAW,CAAC8C,MAAD,EAAS;IAChB,IAAKC,CAAAA,OAAL,GAAe,CAAf,CAAA;IACA,IAAKD,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACH,GAAA;;AACDE,EAAAA,IAAI,GAAG;IACH,IAAI,IAAA,CAAKD,OAAL,GAAe,IAAA,CAAKD,MAAL,CAAYpB,GAAZ,EAAnB,EAAsC;MAClC,IAAIzC,KAAK,GAAG,IAAK6D,CAAAA,MAAL,CAAYlB,GAAZ,CAAgB,IAAKmB,CAAAA,OAArB,CAAZ,CAAA;MACA,IAAKA,CAAAA,OAAL,IAAgB,CAAhB,CAAA;MACA,OAAO;QAAE9D,KAAF;AAASgE,QAAAA,IAAI,EAAE,KAAA;OAAtB,CAAA;AACH,KAAA;;IACD,OAAO;AAAEhE,MAAAA,KAAK,EAAE,IAAT;AAAegE,MAAAA,IAAI,EAAE,IAAA;KAA5B,CAAA;AACH,GAAA;;AAZuB;;ACnH5B,MAAM/B,wBAAsB,GAAG,wGAA/B,CAAA;AACO,MAAMgC,YAAN,CAAmB;EACtBlD,WAAW,CAACoB,MAAD,EAAS;IAChB,IAAKT,CAAAA,MAAL,GAAc,CAAd,CAAA;IACA,IAAKS,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACA,IAAA,IAAA,CAAK+B,cAAL,GAAsB/B,MAAM,GAAG,GAA/B,CAAA;AACA,IAAA,IAAIgC,QAAQ,GAAGhC,MAAM,GAAG,GAAxB,CAAA;AACA,IAAA,IAAIiC,UAAU,GAAGjC,MAAM,GAAG,GAA1B,CAAA;AACA,IAAA,IAAA,CAAKkC,IAAL,GAAY,IAAI7B,MAAJ,CAAW2B,QAAX,CAAZ,CAAA;AACA,IAAA,IAAA,CAAKG,MAAL,GAAc,IAAI9B,MAAJ,CAAW4B,UAAX,CAAd,CAAA;AACH,GAAA;;AACD3B,EAAAA,GAAG,GAAG;AACF,IAAA,IAAI8B,OAAO,GAAG,IAAA,CAAKF,IAAL,CAAU5B,GAAV,EAAd,CAAA;AACA,IAAA,IAAI+B,SAAS,GAAG,IAAA,CAAKF,MAAL,CAAY7B,GAAZ,EAAhB,CAAA;;IACA,IAAI8B,OAAO,IAAIC,SAAf,EAA0B;AACtB,MAAA,MAAM,IAAIxD,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,KAAA;;AACD,IAAA,OAAOsC,OAAP,CAAA;AACH,GAAA;;AACD7B,EAAAA,OAAO,GAAG;AACN,IAAA,IAAI+B,WAAW,GAAG,IAAA,CAAKJ,IAAL,CAAU3B,OAAV,EAAlB,CAAA;AACA,IAAA,IAAIgC,aAAa,GAAG,IAAA,CAAKJ,MAAL,CAAY5B,OAAZ,EAApB,CAAA;;IACA,IAAI+B,WAAW,IAAIC,aAAnB,EAAkC;AAC9B,MAAA,MAAM,IAAI1D,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,KAAA;;AACD,IAAA,OAAOwC,WAAP,CAAA;AACH,GAAA;;EACDE,cAAc,CAACvC,KAAD,EAAQ;IAClB,IAAIC,IAAI,GAAG,IAAIC,WAAJ,CAAgB,CAACF,KAAD,CAAhB,CAAX,CAAA;IACA,IAAIjB,KAAK,GAAG,IAAIM,UAAJ,CAAeY,IAAI,CAACE,MAApB,CAAZ,CAAA;IACA,OAAOrB,cAAc,CAACC,KAAD,CAArB,CAAA;AACH,GAAA;;EACDyD,gBAAgB,CAACC,QAAD,EAAW;AACvB,IAAA,IAAI1D,KAAK,GAAGI,cAAc,CAACsD,QAAD,CAA1B,CAAA;IACA,IAAIxC,IAAI,GAAG,IAAIC,WAAJ,CAAgBnB,KAAK,CAACoB,MAAtB,CAAX,CAAA;IACA,OAAOF,IAAI,CAAC,CAAD,CAAX,CAAA;AACH,GAAA;;EACDyC,WAAW,CAACvH,GAAD,EAAM;IACb,IAAIwH,WAAW,GAAG,IAAA,CAAKb,cAAL,GAAsBrF,IAAI,CAACC,SAAL,CAAevB,GAAf,CAAxC,CAAA;AACA,IAAA,IAAIyH,QAAQ,GAAGxE,WAAA,CAAiBuE,WAAjB,CAAf,CAAA;AACA,IAAA,OAAOC,QAAP,CAAA;AACH,GAAA;;EACDrC,GAAG,CAACpF,GAAD,EAAM;AACL,IAAA,IAAIyH,QAAQ,GAAG,IAAA,CAAKF,WAAL,CAAiBvH,GAAjB,CAAf,CAAA;;AACA,IAAA,IAAIyH,QAAJ,EAAc;AACV,MAAA,IAAI5C,KAAK,GAAG,IAAA,CAAKwC,gBAAL,CAAsBI,QAAtB,CAAZ,CAAA;MACA,IAAIhF,KAAK,GAAG,IAAKsE,CAAAA,MAAL,CAAY3B,GAAZ,CAAgBP,KAAhB,CAAZ,CAAA;;AACA,MAAA,IAAIpC,KAAJ,EAAW;AACP,QAAA,OAAOA,KAAP,CAAA;AACH,OAFD,MAGK;AACD,QAAA,MAAM,IAAIgB,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,OAAA;AACJ,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACDgD,EAAAA,GAAG,CAAC1H,GAAD,EAAMyC,KAAN,EAAa;IACZ,IAAI+E,WAAW,GAAG,IAAA,CAAKb,cAAL,GAAsBrF,IAAI,CAACC,SAAL,CAAevB,GAAf,CAAxC,CAAA;AACA,IAAA,IAAIyH,QAAQ,GAAGxE,WAAA,CAAiBuE,WAAjB,CAAf,CAAA;;AACA,IAAA,IAAIC,QAAJ,EAAc;AACV,MAAA,IAAI5C,KAAK,GAAG,IAAA,CAAKwC,gBAAL,CAAsBI,QAAtB,CAAZ,CAAA;MACA,OAAO,IAAA,CAAKV,MAAL,CAAYlB,OAAZ,CAAoBhB,KAApB,EAA2BpC,KAA3B,CAAP,CAAA;AACH,KAHD,MAIK;AACD,MAAA,IAAIkF,SAAS,GAAG,IAAKzC,CAAAA,GAAL,EAAhB,CAAA;AACA,MAAA,IAAI0C,YAAY,GAAG,IAAA,CAAKR,cAAL,CAAoBO,SAApB,CAAnB,CAAA;AACA1E,MAAAA,YAAA,CAAkBuE,WAAlB,EAA+BI,YAA/B,CAAA,CAAA;AACA,MAAA,IAAA,CAAKd,IAAL,CAAUrB,IAAV,CAAezF,GAAf,CAAA,CAAA;AACA,MAAA,IAAA,CAAK+G,MAAL,CAAYtB,IAAZ,CAAiBhD,KAAjB,CAAA,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;AACJ,GAAA;;EACDoF,MAAM,CAAC7H,GAAD,EAAM;IACR,IAAIwH,WAAW,GAAG,IAAA,CAAKb,cAAL,GAAsBrF,IAAI,CAACC,SAAL,CAAevB,GAAf,CAAxC,CAAA;AACA,IAAA,IAAIyH,QAAQ,GAAGxE,WAAA,CAAiBuE,WAAjB,CAAf,CAAA;;AACA,IAAA,IAAIC,QAAJ,EAAc;AACV,MAAA,IAAI,IAAKvC,CAAAA,GAAL,EAAc,IAAA,CAAlB,EAAqB;AACjB;AACA;QACAjC,aAAA,CAAmBuE,WAAnB,CAAA,CAAA;AACH,OAJD,MAKK;AACD;AACA;QACA,IAAI5B,OAAO,GAAG,IAAA,CAAKkB,IAAL,CAAU1B,GAAV,CAAc,IAAKF,CAAAA,GAAL,EAAa,GAAA,CAA3B,CAAd,CAAA;;QACA,IAAI,CAACU,OAAL,EAAc;AACV,UAAA,MAAM,IAAInC,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,SAAA;;AACDzB,QAAAA,aAAA,CAAmBuE,WAAnB,EAPC;AASD;;QACA,IAAI5B,OAAO,IAAI5F,GAAf,EAAoB;UAChB,IAAI8H,aAAa,GAAG,IAAA,CAAKnB,cAAL,GAAsBrF,IAAI,CAACC,SAAL,CAAeqE,OAAf,CAA1C,CAAA;AACA3C,UAAAA,YAAA,CAAkB6E,aAAlB,EAAiCL,QAAjC,CAAA,CAAA;AACH,SAAA;AACJ,OAAA;;AACD,MAAA,IAAI5C,KAAK,GAAG,IAAA,CAAKwC,gBAAL,CAAsBI,QAAtB,CAAZ,CAAA;AACA,MAAA,IAAA,CAAKX,IAAL,CAAUxB,UAAV,CAAqBT,KAArB,CAAA,CAAA;AACA,MAAA,OAAO,KAAKkC,MAAL,CAAYzB,UAAZ,CAAuBT,KAAvB,CAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,IAAP,CAAA;AACH,GAAA;;AACDsB,EAAAA,KAAK,GAAG;AACJ,IAAA,KAAK,IAAInG,GAAT,IAAgB,IAAA,CAAK8G,IAArB,EAA2B;MACvB,IAAIU,WAAW,GAAG,IAAA,CAAKb,cAAL,GAAsBrF,IAAI,CAACC,SAAL,CAAevB,GAAf,CAAxC,CAAA;MACAiD,aAAA,CAAmBuE,WAAnB,CAAA,CAAA;AACH,KAAA;;IACD,IAAKV,CAAAA,IAAL,CAAUX,KAAV,EAAA,CAAA;IACA,IAAKY,CAAAA,MAAL,CAAYZ,KAAZ,EAAA,CAAA;AACH,GAAA;;AACDC,EAAAA,OAAO,GAAG;IACN,IAAI7F,GAAG,GAAG,EAAV,CAAA;;AACA,IAAA,KAAK,IAAI8F,CAAT,IAAc,IAAd,EAAoB;MAChB9F,GAAG,CAACkF,IAAJ,CAASY,CAAT,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,OAAO9F,GAAP,CAAA;AACH,GAAA;;EACe,CAAfyF,MAAM,CAACC,QAAQ,CAAI,GAAA;AAChB,IAAA,OAAO,IAAI8B,oBAAJ,CAAyB,IAAzB,CAAP,CAAA;AACH,GAAA;;EACDjC,MAAM,CAACkC,GAAD,EAAM;IACR,KAAK,IAAI,CAACC,CAAD,EAAI5B,CAAJ,CAAT,IAAmB2B,GAAnB,EAAwB;AACpB,MAAA,IAAA,CAAKN,GAAL,CAASO,CAAT,EAAY5B,CAAZ,CAAA,CAAA;AACH,KAAA;AACJ,GAAA;;AACD5F,EAAAA,SAAS,GAAG;AACR,IAAA,OAAOa,IAAI,CAACC,SAAL,CAAe,IAAf,CAAP,CAAA;AACH,GA9HqB;;;EAgIJ,OAAXwB,WAAW,CAAC+B,IAAD,EAAO;IACrB,IAAI3D,GAAG,GAAG,IAAIuF,YAAJ,CAAiB5B,IAAI,CAACF,MAAtB,CAAV,CADqB;;AAGrBzD,IAAAA,GAAG,CAACgD,MAAJ,GAAaW,IAAI,CAACX,MAAlB,CAHqB;;IAKrBhD,GAAG,CAAC2F,IAAJ,GAAW,IAAI7B,MAAJ,CAAWH,IAAI,CAACF,MAAL,GAAc,GAAzB,CAAX,CAAA;IACAzD,GAAG,CAAC2F,IAAJ,CAAS3C,MAAT,GAAkBW,IAAI,CAACgC,IAAL,CAAU3C,MAA5B,CANqB;;IAQrBhD,GAAG,CAAC4F,MAAJ,GAAa,IAAI9B,MAAJ,CAAWH,IAAI,CAACF,MAAL,GAAc,GAAzB,CAAb,CAAA;IACAzD,GAAG,CAAC4F,MAAJ,CAAW5C,MAAX,GAAoBW,IAAI,CAACiC,MAAL,CAAY5C,MAAhC,CAAA;AACA,IAAA,OAAOhD,GAAP,CAAA;AACH,GAAA;;AA3IqB,CAAA;;AA6I1B,MAAM4G,oBAAN,CAA2B;EACvBvE,WAAW,CAAC0E,YAAD,EAAe;IACtB,IAAKpB,CAAAA,IAAL,GAAY,IAAIZ,cAAJ,CAAmBgC,YAAY,CAACpB,IAAhC,CAAZ,CAAA;IACA,IAAKC,CAAAA,MAAL,GAAc,IAAIb,cAAJ,CAAmBgC,YAAY,CAACnB,MAAhC,CAAd,CAAA;AACH,GAAA;;AACDP,EAAAA,IAAI,GAAG;AACH,IAAA,IAAIxG,GAAG,GAAG,IAAA,CAAK8G,IAAL,CAAUN,IAAV,EAAV,CAAA;AACA,IAAA,IAAI/D,KAAK,GAAG,IAAA,CAAKsE,MAAL,CAAYP,IAAZ,EAAZ,CAAA;;AACA,IAAA,IAAIxG,GAAG,CAACyG,IAAJ,IAAYhE,KAAK,CAACgE,IAAtB,EAA4B;AACxB,MAAA,MAAM,IAAIhD,KAAJ,CAAUiB,wBAAV,CAAN,CAAA;AACH,KAAA;;IACD,OAAO;MAAEjC,KAAK,EAAE,CAACzC,GAAG,CAACyC,KAAL,EAAYA,KAAK,CAACA,KAAlB,CAAT;MAAmCgE,IAAI,EAAEzG,GAAG,CAACyG,IAAAA;KAApD,CAAA;AACH,GAAA;;AAZsB;;AC9I3B,MAAM/B,sBAAsB,GAAG,wGAA/B,CAAA;AACO,MAAMyD,YAAN,CAAmB;EACtB3E,WAAW,CAACoB,MAAD,EAAS;IAChB,IAAKT,CAAAA,MAAL,GAAc,CAAd,CAAA;IACA,IAAKS,CAAAA,MAAL,GAAcA,MAAd,CAAA;AACA,IAAA,IAAA,CAAKwD,kBAAL,GAA0BxD,MAAM,GAAG,GAAnC,CAAA;AACA,IAAA,IAAIyD,cAAc,GAAGzD,MAAM,GAAG,GAA9B,CAAA;AACA,IAAA,IAAA,CAAKmB,QAAL,GAAgB,IAAId,MAAJ,CAAWoD,cAAX,CAAhB,CAAA;AACH,GAAA;;AACDnD,EAAAA,GAAG,GAAG;AACF,IAAA,OAAO,IAAKa,CAAAA,QAAL,CAAcb,GAAd,EAAP,CAAA;AACH,GAAA;;AACDC,EAAAA,OAAO,GAAG;AACN,IAAA,OAAO,IAAKY,CAAAA,QAAL,CAAcZ,OAAd,EAAP,CAAA;AACH,GAAA;;EACDiC,cAAc,CAACvC,KAAD,EAAQ;IAClB,IAAIC,IAAI,GAAG,IAAIC,WAAJ,CAAgB,CAACF,KAAD,CAAhB,CAAX,CAAA;IACA,IAAIjB,KAAK,GAAG,IAAIM,UAAJ,CAAeY,IAAI,CAACE,MAApB,CAAZ,CAAA;IACA,OAAOrB,cAAc,CAACC,KAAD,CAArB,CAAA;AACH,GAAA;;EACDyD,gBAAgB,CAACC,QAAD,EAAW;AACvB,IAAA,IAAI1D,KAAK,GAAGI,cAAc,CAACsD,QAAD,CAA1B,CAAA;IACA,IAAIxC,IAAI,GAAG,IAAIC,WAAJ,CAAgBnB,KAAK,CAACoB,MAAtB,CAAX,CAAA;IACA,OAAOF,IAAI,CAAC,CAAD,CAAX,CAAA;AACH,GAAA;;EACDwD,QAAQ,CAAC5C,OAAD,EAAU;IACd,IAAI8B,WAAW,GAAG,IAAA,CAAKY,kBAAL,GAA0B9G,IAAI,CAACC,SAAL,CAAemE,OAAf,CAA5C,CAAA;AACA,IAAA,OAAOzC,aAAA,CAAmBuE,WAAnB,CAAP,CAAA;AACH,GAAA;;EACDE,GAAG,CAAChC,OAAD,EAAU;IACT,IAAI8B,WAAW,GAAG,IAAA,CAAKY,kBAAL,GAA0B9G,IAAI,CAACC,SAAL,CAAemE,OAAf,CAA5C,CAAA;;AACA,IAAA,IAAIzC,WAAA,CAAiBuE,WAAjB,CAAJ,EAAmC;AAC/B,MAAA,OAAO,KAAP,CAAA;AACH,KAFD,MAGK;AACD,MAAA,IAAIG,SAAS,GAAG,IAAKzC,CAAAA,GAAL,EAAhB,CAAA;AACA,MAAA,IAAI0C,YAAY,GAAG,IAAA,CAAKR,cAAL,CAAoBO,SAApB,CAAnB,CAAA;AACA1E,MAAAA,YAAA,CAAkBuE,WAAlB,EAA+BI,YAA/B,CAAA,CAAA;AACA,MAAA,IAAA,CAAK7B,QAAL,CAAcN,IAAd,CAAmBC,OAAnB,CAAA,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;AACJ,GAAA;;EACDmC,MAAM,CAACnC,OAAD,EAAU;IACZ,IAAI8B,WAAW,GAAG,IAAA,CAAKY,kBAAL,GAA0B9G,IAAI,CAACC,SAAL,CAAemE,OAAf,CAA5C,CAAA;AACA,IAAA,IAAI+B,QAAQ,GAAGxE,WAAA,CAAiBuE,WAAjB,CAAf,CAAA;;AACA,IAAA,IAAIC,QAAJ,EAAc;AACV,MAAA,IAAI,IAAKvC,CAAAA,GAAL,EAAc,IAAA,CAAlB,EAAqB;AACjB;AACA;QACAjC,aAAA,CAAmBuE,WAAnB,CAAA,CAAA;AACH,OAJD,MAKK;AACD;AACA;QACA,IAAIe,WAAW,GAAG,IAAA,CAAKxC,QAAL,CAAcX,GAAd,CAAkB,IAAKF,CAAAA,GAAL,EAAa,GAAA,CAA/B,CAAlB,CAAA;;QACA,IAAI,CAACqD,WAAL,EAAkB;AACd,UAAA,MAAM,IAAI9E,KAAJ,CAAUiB,sBAAV,CAAN,CAAA;AACH,SAAA;;AACDzB,QAAAA,aAAA,CAAmBuE,WAAnB,EAPC;AASD;;QACA,IAAIe,WAAW,IAAI7C,OAAnB,EAA4B;UACxB,IAAI8C,iBAAiB,GAAG,IAAA,CAAKJ,kBAAL,GAA0B9G,IAAI,CAACC,SAAL,CAAegH,WAAf,CAAlD,CAAA;AACAtF,UAAAA,YAAA,CAAkBuF,iBAAlB,EAAqCf,QAArC,CAAA,CAAA;AACH,SAAA;AACJ,OAAA;;AACD,MAAA,IAAI5C,KAAK,GAAG,IAAA,CAAKwC,gBAAL,CAAsBI,QAAtB,CAAZ,CAAA;AACA,MAAA,IAAA,CAAK1B,QAAL,CAAcT,UAAd,CAAyBT,KAAzB,CAAA,CAAA;AACA,MAAA,OAAO,IAAP,CAAA;AACH,KAAA;;AACD,IAAA,OAAO,KAAP,CAAA;AACH,GAAA;;AACDsB,EAAAA,KAAK,GAAG;AACJ,IAAA,KAAK,IAAIT,OAAT,IAAoB,IAAA,CAAKK,QAAzB,EAAmC;MAC/B,IAAIyB,WAAW,GAAG,IAAA,CAAKY,kBAAL,GAA0B9G,IAAI,CAACC,SAAL,CAAemE,OAAf,CAA5C,CAAA;MACAzC,aAAA,CAAmBuE,WAAnB,CAAA,CAAA;AACH,KAAA;;IACD,IAAKzB,CAAAA,QAAL,CAAcI,KAAd,EAAA,CAAA;AACH,GAAA;;AACDC,EAAAA,OAAO,GAAG;IACN,IAAI7F,GAAG,GAAG,EAAV,CAAA;;AACA,IAAA,KAAK,IAAI8F,CAAT,IAAc,IAAd,EAAoB;MAChB9F,GAAG,CAACkF,IAAJ,CAASY,CAAT,CAAA,CAAA;AACH,KAAA;;AACD,IAAA,OAAO9F,GAAP,CAAA;AACH,GAAA;;EACe,CAAfyF,MAAM,CAACC,QAAQ,CAAI,GAAA;AAChB,IAAA,OAAO,KAAKF,QAAL,CAAcC,MAAM,CAACC,QAArB,CAAP,EAAA,CAAA;AACH,GAAA;;EACDH,MAAM,CAACC,QAAD,EAAW;AACb,IAAA,KAAK,IAAIL,OAAT,IAAoBK,QAApB,EAA8B;MAC1B,IAAK2B,CAAAA,GAAL,CAAShC,OAAT,CAAA,CAAA;AACH,KAAA;AACJ,GAAA;;AACDjF,EAAAA,SAAS,GAAG;AACR,IAAA,OAAOa,IAAI,CAACC,SAAL,CAAe,IAAf,CAAP,CAAA;AACH,GA/FqB;;;EAiGJ,OAAXwB,WAAW,CAAC+B,IAAD,EAAO;IACrB,IAAI4C,GAAG,GAAG,IAAIS,YAAJ,CAAiBrD,IAAI,CAACF,MAAtB,CAAV,CADqB;;AAGrB8C,IAAAA,GAAG,CAACvD,MAAJ,GAAaW,IAAI,CAACX,MAAlB,CAHqB;;AAKrB,IAAA,IAAIkE,cAAc,GAAGvD,IAAI,CAACF,MAAL,GAAc,GAAnC,CAAA;AACA8C,IAAAA,GAAG,CAAC3B,QAAJ,GAAe,IAAId,MAAJ,CAAWoD,cAAX,CAAf,CAAA;IACAX,GAAG,CAAC3B,QAAJ,CAAa5B,MAAb,GAAsBW,IAAI,CAACiB,QAAL,CAAc5B,MAApC,CAAA;AACA,IAAA,OAAOuD,GAAP,CAAA;AACH,GAAA;;AA1GqB;;ACF1B,MAAMe,IAAI,GAAG,EAAb,CAAA;AACA,MAAMC,SAAS,GAAGD,IAAI,GAAG,CAAzB,CAAA;AAEA,MAAME,MAAM,GAAG,CAAC,IAAD,EAAO,MAAP,EAAe,IAAf,EAAqB,IAArB,EAA2B,IAA3B,CAAf,CAAA;AAEO,SAASC,QAAT,CAAkBC,IAAlB,EAAwC;EAC7C,IAAIC,MAAM,GAAG,EAAb,CAAA;AAEA,EAAA,MAAMC,CAAC,GAAGF,IAAI,IAAI,CAAR,GAAYG,MAAM,CAACC,SAAS,EAAV,CAAlB,GAAkCJ,IAA5C,CAAA;;EAEA,IAAIA,IAAI,KAAK,CAAb,EAAgB;AACd5F,IAAAA,GAAA,CACG,CAAA,8CAAA,EAAgD8F,CAAE,CADrD,eAAA,CAAA,CAAA,CAAA;AAGD,GAAA;;AAED,EAAA,MAAMG,GAAG,GAAIH,CAAC,GAAG,EAAL,GAAW,CAAvB,CAAA;;EAEA,KAAK,IAAI3E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqE,IAApB,EAA0BrE,CAAC,EAA3B,EAA+B;AAC7B,IAAA,IAAI+E,CAAC,GAAG,CAAA,IAAK/E,CAAC,GAAGsE,SAAT,IAAsB,CAA9B,CAAA;;AAEA,IAAA,IAAIK,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;MACfI,CAAC,IAAI,CAAC,CAAN,CAAA;AACD,KAFD,MAEO,IAAIJ,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACtBI,MAAAA,CAAC,GAAGC,GAAG,CAACD,CAAD,CAAP,CAAA;AACD,KAAA;;AAEDA,IAAAA,CAAC,IAAIJ,CAAL,CAAA;;IAEA,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,IAApB,EAA0BY,CAAC,EAA3B,EAA+B;AAC7B,MAAA,IAAIjI,CAAC,GAAG,CAAA,IAAKiI,CAAC,GAAGX,SAAT,IAAsB,CAA9B,CAAA;;AAEA,MAAA,IAAIK,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACf3H,QAAAA,CAAC,GAAGgI,GAAG,CAAChI,CAAD,CAAP,CAAA;AACD,OAAA;;AAEDA,MAAAA,CAAC,IAAI2H,CAAL,CAAA;MAEA,MAAM1C,CAAC,GAAG+C,GAAG,CAAChI,CAAC,GAAG+H,CAAL,CAAH,GAAaD,GAAvB,CAAA;MAEA,MAAMzG,KAAK,GAAG4D,CAAC,GAAG,CAAJ,GAAQsC,MAAM,CAACtC,CAAD,CAAd,GAAoB,IAAlC,CAAA;AAEAyC,MAAAA,MAAM,IAAIrG,KAAV,CAAA;AACD,KAAA;;AAEDqG,IAAAA,MAAM,IAAI,IAAV,CAAA;AACD,GAAA;;AAED,EAAA,OAAOA,MAAP,CAAA;AACD,CAAA;;AAED,SAASM,GAAT,CAAaE,GAAb,EAAkC;AAChC,EAAA,OAAOA,GAAG,IAAI,CAAP,GAAWA,GAAX,GAAiB,CAACA,GAAzB,CAAA;AACD,CAAA;;AAED,SAASL,SAAT,GAA6B;AAC3B,EAAA,MAAMlH,YAAU,GAAGkB,UAAA,EAAnB,CAAA;AAEA,EAAA,IAAIsG,GAAG,GAAGC,MAAM,CAAC,CAAD,CAAhB,CAAA;;AAEA,EAAA,KAAK,IAAI3E,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG9C,YAAU,CAACoC,MAAvC,EAA+CU,KAAK,EAApD,EAAwD;IACtD0E,GAAG,IAAIC,MAAM,CAACzH,YAAU,CAACsC,UAAX,CAAsBQ,KAAtB,CAAD,CAAb,CAAA;AACD,GAAA;;AAED,EAAA,OAAOmE,MAAM,CAACO,GAAG,GAAGC,MAAM,CAACvG,WAAA,EAAA,CAAmBwG,QAAnB,EAAD,CAAb,CAAb,CAAA;AACD;;;AChED,IAAaC,MAAb,GADCvJ,WACD,CADAwJ,QAAA,GAAA,MACaD,MADb,CACoB;EAGlBlG,WAAW,CAAQoG,YAAR,EAA8B;IAAA,IAAtBA,CAAAA,YAAsB,GAAtBA,YAAsB,CAAA;AACvC,IAAA,IAAA,CAAKC,KAAL,GAAa5G,eAAA,EAAb,CAAA;AACD,GAAA;;AALiB,CAApB,CAAA,IAAA0G,QAAA;;;;ACYaG,IAAAA,QAAb,GADC3J,WACD,CAAA,MAAA,IAAA,OAAA,GADA,MACa2J,QADb,SAC8BhH,YAD9B,CAC2C;AAIzCU,EAAAA,WAAW,GAAG;AACZ;AACA,IAAA,KAAA,EAAA,CAAA;AACA,IAAA,IAAA,CAAKuG,OAAL,GAAe,IAAIrD,YAAJ,CAAiB,SAAjB,CAAf,CAAA;AACA,IAAA,IAAA,CAAKsD,MAAL,GAAc,IAAI7B,YAAJ,CAAiB,QAAjB,CAAd,CAAA;AACD,GAAA;;AAED9E,EAAAA,OAAO,GAAG;IACR,OAAO,IAAIyG,QAAJ,EAAP,CAAA;AACD,GAbwC;AAgBzC;AACA;;;EAEAG,aAAa,CAACpB,IAAD,EAAqB;AAChCvE,IAAAA,MAAM,CAACuE,IAAI,IAAI,CAAT,EAAY,yBAAZ,CAAN,CAAA;AACAvE,IAAAA,MAAM,CACJ,CAAC,IAAKyF,CAAAA,OAAL,CAAa3E,GAAb,CAAiBnC,eAAA,EAAjB,CADG,EAEJ,8BAFI,CAAN,CAAA;AAKA,IAAA,MAAM2G,YAAY,GAAGhB,QAAQ,CAACC,IAAD,CAA7B,CAAA;AAEA,IAAA,MAAMqB,MAAM,GAAG,IAAIR,MAAJ,CAAWE,YAAX,CAAf,CAAA;AAEA3G,IAAAA,GAAA,CACG,CAAA,oBAAA,EAAsB4F,IAAK,CAAUe,QAAAA,EAAAA,YAAY,CAAC/D,OAAb,CACpC,KADoC,EAEpC,MAFoC,CAGpC,CAJJ,EAAA,CAAA,CAAA,CAAA;IAOA5C,GAAA,CAAS,mBAAT,CAAA,CAAA;IAEA,IAAK8G,CAAAA,OAAL,CAAarC,GAAb,CAAiBzE,eAAA,EAAjB,EAAyCiH,MAAzC,CAAA,CAAA;AACA,IAAA,IAAA,CAAKF,MAAL,CAAYtC,GAAZ,CAAgBzE,eAAA,EAAhB,CAAA,CAAA;AACD,GAzCwC;AA4CzC;AACA;;;AAEAkH,EAAAA,YAAY,GAAS;IACnB,IAAID,MAAM,GAAG,IAAA,CAAKH,OAAL,CAAa3E,GAAb,CAAiBnC,eAAA,EAAjB,CAAb,CAAA;AAEAA,IAAAA,GAAA,CACG,CAAA,uBAAA,EAAyBiH,MAAM,CAACN,YAAP,CAAoB/D,OAApB,CAA4B,KAA5B,EAAmC,MAAnC,CAA2C,CADvE,EAAA,CAAA,CAAA,CAAA;AAGD,GAAA;;AAGDuE,EAAAA,YAAY,GAAS;AACnB9F,IAAAA,MAAM,CACJ,CAAC,CAAC,IAAA,CAAKyF,OAAL,CAAa3E,GAAb,CAAiBnC,eAAA,EAAjB,CADE,EAEJ,yBAFI,CAAN,CAAA;AAKA,IAAA,IAAA,CAAK8G,OAAL,CAAalC,MAAb,CAAoB5E,eAAA,EAApB,CAAA,CAAA;AACA,IAAA,IAAA,CAAK+G,MAAL,CAAYnC,MAAZ,CAAmB5E,eAAA,EAAnB,CAAA,CAAA;IAEAA,GAAA,CAAS,8BAAT,CAAA,CAAA;AACD,GAAA;;AAGDiH,EAAAA,MAAM,CAACrB,IAAY,GAAG,CAAhB,EAAyB;AAC7B,IAAA,IAAIe,YAAY,GAAGhB,QAAQ,CAACC,IAAD,CAA3B,CAAA;AAEA5F,IAAAA,GAAA,CAAU,CAAA,kBAAA,EAAoB2G,YAAY,CAAC/D,OAAb,CAAqB,KAArB,EAA4B,MAA5B,CAAoC,CAAlE,EAAA,CAAA,CAAA,CAAA;AACD,GAAA;;AAGDwE,EAAAA,WAAW,GAAS;AAClB,IAAA,MAAML,MAAM,GAAG,IAAKA,CAAAA,MAAL,CAAYjE,QAA3B,CAAA;;AAEA,IAAA,KAAK,MAAM8D,KAAX,IAAoBG,MAAM,CAAC5D,OAAP,EAApB,EAAsC;MACpC,MAAM8D,MAAM,GAAG,IAAKH,CAAAA,OAAL,CAAa3E,GAAb,CAAiByE,KAAjB,CAAf,CAAA;AAEA5G,MAAAA,GAAA,CACG,CAAkB4G,gBAAAA,EAAAA,KAAM,UAASK,MAAM,CAACN,YAAP,CAAoB/D,OAApB,CAChC,KADgC,EAEhC,MAFgC,CAGhC,CAJJ,EAAA,CAAA,CAAA,CAAA;AAMD,KAAA;AACF,GAAA;;AAzFwC,CAA3C,GAAA,yBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,eAAA,EAAA,CAkBG/F,IAlBH,CA8CGI,EAAAA,MAAAA,CAAAA,wBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAAA,eAAAA,CAAAA,EAAAA,OAAAA,CAAAA,SAAAA,CAAAA,EAAAA,yBAAAA,CAAAA,OAAAA,CAAAA,SAAAA,EAAAA,cAAAA,EAAAA,CAAAA,IA9CH,yJAuDGJ,IAvDH,CAAA,EAAA,MAAA,CAAA,wBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,cAAA,CAAA,EAAA,OAAA,CAAA,SAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,QAAA,EAAA,CAoEGI,IApEH,CAAA,EAAA,MAAA,CAAA,wBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,QAAA,CAAA,EAAA,OAAA,CAAA,SAAA,CAAA,EAAA,yBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,aAAA,EAAA,CA2EGA,IA3EH,CAAA,EAAA,MAAA,CAAA,wBAAA,CAAA,OAAA,CAAA,SAAA,EAAA,aAAA,CAAA,EAAA,OAAA,CAAA,SAAA,CAAA,GAAA,OAAA,CAAA,CAAA,IAAA,OAAA;;EAAa4J;;;kBAAAA;;;;;;;;;;kBAAAA;;;;;;;;;;kBAAAA;;;;;;;;;;;;;kBAAAA;;;;;;;;;;kBAAAA;;;;;;;;;;;;;;;"}